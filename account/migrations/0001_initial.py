<<<<<<< HEAD
# Generated by Django 3.0.6 on 2020-08-06 14:13
=======
# Generated by Django 3.1 on 2020-08-08 13:12
>>>>>>> 68327b435475aae56ff8c4eff42414a32bf457a1

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD
        ('auth', '0011_update_proxy_permissions'),
=======
        ('auth', '0012_alter_user_first_name_max_length'),
>>>>>>> 68327b435475aae56ff8c4eff42414a32bf457a1
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
<<<<<<< HEAD
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
=======
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
>>>>>>> 68327b435475aae56ff8c4eff42414a32bf457a1
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=100)),
                ('profile', models.ImageField(blank=True, null=True, upload_to='account/')),
                ('email', models.EmailField(max_length=200)),
                ('info', models.TextField(blank=True, max_length=500, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('point', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('followers', models.ManyToManyField(related_name='followings', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
